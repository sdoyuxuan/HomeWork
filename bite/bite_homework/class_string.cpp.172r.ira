
;; Function String::String(const char*) (_ZN6StringC2EPKc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r67: preferred GENERAL_REGS, alternative NO_REGS
    a0 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS
    a9 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred Q_REGS, alternative GENERAL_REGS
    a8 (r62,l0) best Q_REGS, cover GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS
    a7 (r61,l0) best AREG, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    a6 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a2(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a7(r61,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a8(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a9(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 27(l0): point = 13
   Insn 43(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 11(l0): point = 37
   Insn 10(l0): point = 39
   Insn 9(l0): point = 41
   Insn 8(l0): point = 43
   Insn 6(l0): point = 46
   Insn 5(l0): point = 48
 a0(r67): [4..5]
 a1(r58): [8..13]
 a2(r66): [10..11]
 a3(r59): [19..20]
 a4(r65): [21..22]
 a5(r64): [25..26]
 a6(r60): [25..28]
 a7(r61): [29..30]
 a8(r62): [40..41]
 a9(r63): [42..43]
Compressing live ranges: from 51 to 19 - 37%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r58): [2..5]
 a2(r66): [3..4]
 a3(r59): [6..7]
 a4(r65): [8..9]
 a5(r64): [10..11]
 a6(r60): [10..12]
 a7(r61): [13..14]
 a8(r62): [15..16]
 a9(r63): [17..18]
  regions=1, blocks=7, points=19
    allocnos=10, copies=0, conflicts=0, ranges=10
Disposition:
    1:r58  l0     0    3:r59  l0     0    6:r60  l0     1    7:r61  l0     0
    8:r62  l0     0    9:r63  l0     0    5:r64  l0     0    4:r65  l0     0
    2:r66  l0     1    0:r67  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 63
insn=9, live_throughout: 7, dead_or_set: 62, 63
insn=10, live_throughout: 7, dead_or_set: 62
insn=11, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 
insn=14, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 0
insn=16, live_throughout: 7, dead_or_set: 0, 61
insn=17, live_throughout: 7, dead_or_set: 60, 61
insn=18, live_throughout: 7, 60, dead_or_set: 64
insn=19, live_throughout: 7, dead_or_set: 60, 64
insn=20, live_throughout: 7, dead_or_set: 65
insn=21, live_throughout: 7, dead_or_set: 59, 65
insn=22, live_throughout: 7, dead_or_set: 59
insn=43, live_throughout: 7, dead_or_set: 
insn=25, live_throughout: 7, dead_or_set: 
insn=27, live_throughout: 7, dead_or_set: 58
insn=28, live_throughout: 7, 58, dead_or_set: 66
insn=29, live_throughout: 7, 58, dead_or_set: 66
insn=30, live_throughout: 7, dead_or_set: 58
insn=31, live_throughout: 7, dead_or_set: 67
insn=32, live_throughout: 7, dead_or_set: 67
insn=33, live_throughout: 7, dead_or_set: 
insn=39, live_throughout: 7, dead_or_set: 
changing reg in insn 27
changing reg in insn 30
changing reg in insn 21
changing reg in insn 22
changing reg in insn 17
changing reg in insn 19
changing reg in insn 16
changing reg in insn 17
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 33.


String::String(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,8u} r1={5d,2u} r2={3d} r6={1d,13u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 147{109d,38u,0e} in 22{20 regular + 2 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 12 [0xc])) [0 p+0 S4 A32])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil))

(jump_insn 6 5 7 2 class_string.h:10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4
;; Succ edge  3 (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 63

;; Pred edge  2 (fallthru)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 class_string.h:10 (set (reg/f:SI 0 ax [63])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 9 8 10 3 class_string.h:10 (set (reg:QI 0 ax [orig:62 D.21135 ] [62])
        (mem:QI (reg/f:SI 0 ax [63]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 10 9 11 3 class_string.h:10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.21135 ] [62])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 11 10 12 3 class_string.h:10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 60 61 64 65

;; Pred edge  2
;; Pred edge  3 (fallthru)
(code_label 12 11 13 4 2 "" [1 uses])

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 class_string.h:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 1 [0x1])) 41 {*movsi_1} (nil))

(call_insn 15 14 17 4 class_string.h:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0xb751f400 operator new []>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (nil)
    (nil))

(insn 17 15 18 4 class_string.h:12 (set (reg/f:SI 1 dx [orig:60 D.21138 ] [60])
        (reg/f:SI 0 ax [orig:61 D.21137 ] [61])) 41 {*movsi_1} (nil))

(insn 18 17 19 4 class_string.h:12 (set (reg/f:SI 0 ax [64])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 19 18 20 4 class_string.h:12 (set (mem/s/f/j:SI (reg/f:SI 0 ax [64]) [0 <variable>._p+0 S4 A32])
        (reg/f:SI 1 dx [orig:60 D.21138 ] [60])) 41 {*movsi_1} (nil))

(insn 20 19 21 4 class_string.h:13 (set (reg/f:SI 0 ax [65])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 21 20 22 4 class_string.h:13 (set (reg/f:SI 0 ax [orig:59 D.21139 ] [59])
        (mem/s/f/j:SI (reg/f:SI 0 ax [65]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 22 21 43 4 class_string.h:13 (set (mem:QI (reg/f:SI 0 ax [orig:59 D.21139 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 50 {*movqi_1} (nil))

(jump_insn 43 22 44 4 class_string.h:10 (set (pc)
        (label_ref 39)) 459 {jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 [100.0%] 

(barrier 44 43 25)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 66 67

;; Pred edge  3
(code_label 25 44 26 5 3 "" [1 uses])

(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 class_string.h:17 (set (reg/f:SI 0 ax [orig:58 D.21141 ] [58])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 28 27 29 5 class_string.h:17 (set (reg/f:SI 1 dx [66])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 29 28 30 5 class_string.h:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1 dx [66])) 41 {*movsi_1} (nil))

(insn 30 29 31 5 class_string.h:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.21141 ] [58])) 41 {*movsi_1} (nil))

(insn 31 30 32 5 class_string.h:17 (set (reg/f:SI 0 ax [67])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 32 31 33 5 class_string.h:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [67])) 41 {*movsi_1} (nil))

(call_insn 33 32 39 5 class_string.h:17 (call (mem:QI (symbol_ref/i:SI ("_ZN6String4copyEPPcPKc") [flags 0x1]  <function_decl 0xb6b1c180 copy>) [0 S1 A8])
        (const_int 12 [0xc])) 465 {*call_0} (nil)
    (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

;; Pred edge  5 (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 39 33 42 6 5 "" [1 uses])

(note 42 39 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 42 0 NOTE_INSN_DELETED)


;; Function String::String(const String&) (_ZN6StringC2ERKS_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r68: preferred GENERAL_REGS, alternative NO_REGS
    a0 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS
    a10 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS
    a9 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS
    a8 (r63,l0) best AREG, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    a7 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS
    a6 (r61,l0) best AREG, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a2(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r61,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a7(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a8(r63,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a9(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a10(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 6(l0): point = 36
   Insn 5(l0): point = 38
 a0(r68): [3..4]
 a1(r58): [7..10]
 a2(r59): [9..12]
 a3(r67): [13..14]
 a4(r66): [17..18]
 a5(r60): [17..20]
 a6(r61): [21..22]
 a7(r62): [27..28]
 a8(r63): [29..30]
 a9(r64): [35..36]
 a10(r65): [37..38]
Compressing live ranges: from 41 to 21 - 51%
Ranges after the compression:
 a0(r68): [0..1]
 a1(r58): [2..4]
 a2(r59): [3..5]
 a3(r67): [6..7]
 a4(r66): [8..9]
 a5(r60): [8..10]
 a6(r61): [11..12]
 a7(r62): [13..14]
 a8(r63): [15..16]
 a9(r64): [17..18]
 a10(r65): [19..20]
  regions=1, blocks=3, points=21
    allocnos=11, copies=0, conflicts=0, ranges=11
Disposition:
    1:r58  l0     0    2:r59  l0     1    5:r60  l0     1    6:r61  l0     0
    7:r62  l0     0    8:r63  l0     0    9:r64  l0     0   10:r65  l0     0
    4:r66  l0     0    3:r67  l0     0    0:r68  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 65
insn=6, live_throughout: 7, dead_or_set: 64, 65
insn=7, live_throughout: 7, dead_or_set: 64
insn=8, live_throughout: 7, dead_or_set: 0
insn=9, live_throughout: 7, dead_or_set: 0, 63
insn=10, live_throughout: 7, dead_or_set: 62, 63
insn=11, live_throughout: 7, dead_or_set: 62
insn=12, live_throughout: 7, dead_or_set: 0
insn=13, live_throughout: 7, dead_or_set: 0, 61
insn=14, live_throughout: 7, dead_or_set: 60, 61
insn=15, live_throughout: 7, 60, dead_or_set: 66
insn=16, live_throughout: 7, dead_or_set: 60, 66
insn=17, live_throughout: 7, dead_or_set: 67
insn=18, live_throughout: 7, dead_or_set: 59, 67
insn=19, live_throughout: 7, 59, dead_or_set: 58
insn=20, live_throughout: 7, 58, dead_or_set: 59
insn=21, live_throughout: 7, dead_or_set: 58
insn=22, live_throughout: 7, dead_or_set: 68
insn=23, live_throughout: 7, dead_or_set: 68
insn=24, live_throughout: 7, dead_or_set: 
changing reg in insn 19
changing reg in insn 21
changing reg in insn 18
changing reg in insn 20
changing reg in insn 14
changing reg in insn 16
changing reg in insn 13
changing reg in insn 14
changing reg in insn 10
changing reg in insn 11
changing reg in insn 9
changing reg in insn 10
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
deleting insn with uid = 9.
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 24.


String::String(const String&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,9u} r1={6d,2u} r2={4d} r6={1d,7u} r7={1d,11u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d} r18={3d} r19={3d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 184{154d,30u,0e} in 18{15 regular + 3 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 59 60 61 62 63 64 65 66 67 68

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:21 (set (reg/f:SI 0 ax [65])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:21 (set (reg/f:SI 0 ax [orig:64 D.21152 ] [64])
        (mem/s/f/j:SI (reg/f:SI 0 ax [65]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:21 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:64 D.21152 ] [64])) 41 {*movsi_1} (nil))

(call_insn/i 8 7 10 2 class_string.h:21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0xb74d6780 strlen>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 10 8 11 2 class_string.h:21 (parallel [
            (set (reg:SI 0 ax [orig:62 D.21154 ] [62])
                (plus:SI (reg:SI 0 ax [orig:63 D.21153 ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 11 10 12 2 class_string.h:21 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [orig:62 D.21154 ] [62])) 41 {*movsi_1} (nil))

(call_insn 12 11 14 2 class_string.h:21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0xb751f400 operator new []>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (nil)
    (nil))

(insn 14 12 15 2 class_string.h:21 (set (reg/f:SI 1 dx [orig:60 D.21156 ] [60])
        (reg/f:SI 0 ax [orig:61 D.21155 ] [61])) 41 {*movsi_1} (nil))

(insn 15 14 16 2 class_string.h:21 (set (reg/f:SI 0 ax [66])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 16 15 17 2 class_string.h:21 (set (mem/s/f/j:SI (reg/f:SI 0 ax [66]) [0 <variable>._p+0 S4 A32])
        (reg/f:SI 1 dx [orig:60 D.21156 ] [60])) 41 {*movsi_1} (nil))

(insn 17 16 18 2 class_string.h:23 (set (reg/f:SI 0 ax [67])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 18 17 19 2 class_string.h:23 (set (reg/f:SI 1 dx [orig:59 D.21157 ] [59])
        (mem/s/f/j:SI (reg/f:SI 0 ax [67]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 19 18 20 2 class_string.h:23 (set (reg/f:SI 0 ax [orig:58 D.21158 ] [58])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 20 19 21 2 class_string.h:23 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1 dx [orig:59 D.21157 ] [59])) 41 {*movsi_1} (nil))

(insn 21 20 22 2 class_string.h:23 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.21158 ] [58])) 41 {*movsi_1} (nil))

(insn 22 21 23 2 class_string.h:23 (set (reg/f:SI 0 ax [68])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 23 22 24 2 class_string.h:23 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [68])) 41 {*movsi_1} (nil))

(call_insn 24 23 32 2 class_string.h:23 (call (mem:QI (symbol_ref/i:SI ("_ZN6String4copyEPPcPKc") [flags 0x1]  <function_decl 0xb6b1c180 copy>) [0 S1 A8])
        (const_int 12 [0xc])) 465 {*call_0} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 32 24 0 NOTE_INSN_DELETED)


;; Function String& String::operator=(const String&) (_ZN6StringaSERKS_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r73: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r73,l0) best GENERAL_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS
    a7 (r71,l0) best GENERAL_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS
    a8 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS
    a9 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS
    a11 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS
    a14 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS
    a15 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS
    a0 (r65,l0) best AREG, cover GENERAL_REGS
    r64: preferred Q_REGS, alternative GENERAL_REGS
    a12 (r64,l0) best Q_REGS, cover GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS
    a13 (r63,l0) best AREG, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    a10 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    a6 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r65,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a7(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a8(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a9(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a10(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a11(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a12(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a13(r63,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a14(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a15(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 51(l0): point = 0
   Insn 45(l0): point = 2
   Insn 41(l0): point = 4
   Insn 40(l0): point = 6
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 35(l0): point = 13
   Insn 32(l0): point = 16
   Insn 31(l0): point = 18
   Insn 30(l0): point = 20
   Insn 29(l0): point = 22
   Insn 27(l0): point = 25
   Insn 26(l0): point = 27
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 23(l0): point = 33
   Insn 22(l0): point = 35
   Insn 21(l0): point = 37
   Insn 20(l0): point = 39
   Insn 19(l0): point = 41
   Insn 18(l0): point = 43
   Insn 17(l0): point = 45
   Insn 16(l0): point = 47
   Insn 15(l0): point = 49
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 7(l0): point = 64
   Insn 6(l0): point = 66
   Insn 5(l0): point = 68
 a0(r65): [3..4]
 a1(r58): [5..6]
 a2(r73): [10..11]
 a3(r59): [10..13]
 a4(r60): [19..20]
 a5(r72): [21..22]
 a6(r61): [28..29]
 a7(r71): [30..31]
 a8(r70): [36..37]
 a9(r69): [40..41]
 a10(r62): [44..45]
 a11(r68): [46..47]
 a12(r64): [55..56]
 a13(r63): [57..58]
 a14(r67): [63..64]
 a15(r66): [67..68]
Compressing live ranges: from 71 to 31 - 43%
Ranges after the compression:
 a0(r65): [0..1]
 a1(r58): [2..3]
 a2(r73): [4..5]
 a3(r59): [4..6]
 a4(r60): [7..8]
 a5(r72): [9..10]
 a6(r61): [11..12]
 a7(r71): [13..14]
 a8(r70): [15..16]
 a9(r69): [17..18]
 a10(r62): [19..20]
 a11(r68): [21..22]
 a12(r64): [23..24]
 a13(r63): [25..26]
 a14(r67): [27..28]
 a15(r66): [29..30]
  regions=1, blocks=7, points=31
    allocnos=16, copies=0, conflicts=0, ranges=16
Disposition:
    1:r58  l0     0    3:r59  l0     1    4:r60  l0     0    6:r61  l0     0
   10:r62  l0     0   13:r63  l0     0   12:r64  l0     0    0:r65  l0     0
   15:r66  l0     0   14:r67  l0     0   11:r68  l0     0    9:r69  l0     0
    8:r70  l0     0    7:r71  l0     0    5:r72  l0     0    2:r73  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 66
insn=6, live_throughout: 7, dead_or_set: 66
insn=7, live_throughout: 7, dead_or_set: 67
insn=8, live_throughout: 7, dead_or_set: 67
insn=9, live_throughout: 7, dead_or_set: 0
insn=10, live_throughout: 7, dead_or_set: 0, 63
insn=11, live_throughout: 7, dead_or_set: 63, 64
insn=12, live_throughout: 7, dead_or_set: 64
insn=13, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 68
insn=17, live_throughout: 7, dead_or_set: 62, 68
insn=18, live_throughout: 7, dead_or_set: 62
insn=19, live_throughout: 7, dead_or_set: 69
insn=20, live_throughout: 7, dead_or_set: 69
insn=21, live_throughout: 7, dead_or_set: 70
insn=22, live_throughout: 7, dead_or_set: 70
insn=23, live_throughout: 7, dead_or_set: 
insn=24, live_throughout: 7, dead_or_set: 71
insn=25, live_throughout: 7, dead_or_set: 61, 71
insn=26, live_throughout: 7, dead_or_set: 61
insn=27, live_throughout: 7, dead_or_set: 
insn=29, live_throughout: 7, dead_or_set: 72
insn=30, live_throughout: 7, dead_or_set: 60, 72
insn=31, live_throughout: 7, dead_or_set: 60
insn=32, live_throughout: 7, dead_or_set: 
insn=33, live_throughout: 7, dead_or_set: 
insn=35, live_throughout: 7, dead_or_set: 59
insn=36, live_throughout: 7, 59, dead_or_set: 73
insn=37, live_throughout: 7, dead_or_set: 59, 73
insn=38, live_throughout: 7, dead_or_set: 
insn=40, live_throughout: 7, dead_or_set: 58
insn=41, live_throughout: 7, dead_or_set: 58, 65
insn=45, live_throughout: 7, dead_or_set: 0, 65
insn=51, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 40
changing reg in insn 41
changing reg in insn 35
changing reg in insn 37
changing reg in insn 30
changing reg in insn 31
changing reg in insn 25
changing reg in insn 26
changing reg in insn 17
changing reg in insn 18
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 41
changing reg in insn 45
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 36
changing reg in insn 37
deleting insn with uid = 10.
deleting insn with uid = 11.
deleting insn with uid = 41.
deleting insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 32.


String& String::operator=(const String&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={16d,14u} r1={5d,1u} r2={4d} r6={1d,17u} r7={1d,15u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,2u} r18={3d} r19={3d} r20={1d,1u,1d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 211{160d,50u,1e} in 29{26 regular + 3 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 63 64 66 67

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:28 (set (reg/f:SI 0 ax [66])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:28 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [66])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:28 (set (reg/f:SI 0 ax [67])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 8 7 9 2 class_string.h:28 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [67])) 41 {*movsi_1} (nil))

(call_insn 9 8 12 2 class_string.h:28 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:SI ("_ZN6StringneERKS_") [flags 0x1]  <function_decl 0xb6b1c000 operator!=>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 12 9 13 2 class_string.h:28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 retval.63 ] [64])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 13 12 14 2 class_string.h:28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  6

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 61 62 68 69 70 71

;; Pred edge  2 (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 class_string.h:30 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 temp+0 S4 A32])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))

(insn 16 15 17 3 class_string.h:31 (set (reg/f:SI 0 ax [68])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 17 16 18 3 class_string.h:31 (set (reg/f:SI 0 ax [orig:62 D.21166 ] [62])
        (mem/s/f/j:SI (reg/f:SI 0 ax [68]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 18 17 19 3 class_string.h:31 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:62 D.21166 ] [62])) 41 {*movsi_1} (nil))

(insn 19 18 20 3 class_string.h:31 (parallel [
            (set (reg:SI 0 ax [69])
                (plus:SI (reg/f:SI 6 bp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 20 19 21 3 class_string.h:31 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [69])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(insn 21 20 22 3 class_string.h:31 (set (reg/f:SI 0 ax [70])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 22 21 23 3 class_string.h:31 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [70])) 41 {*movsi_1} (nil))

(call_insn 23 22 24 3 class_string.h:31 (call (mem:QI (symbol_ref/i:SI ("_ZN6String4copyEPPcPKc") [flags 0x1]  <function_decl 0xb6b1c180 copy>) [0 S1 A8])
        (const_int 12 [0xc])) 465 {*call_0} (nil)
    (nil))

(insn 24 23 25 3 class_string.h:32 (set (reg/f:SI 0 ax [71])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 25 24 26 3 class_string.h:32 (set (reg/f:SI 0 ax [orig:61 D.21167 ] [61])
        (mem/s/f/j:SI (reg/f:SI 0 ax [71]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 26 25 27 3 class_string.h:32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:61 D.21167 ] [61])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil))

(jump_insn 27 26 28 3 class_string.h:32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 60 72

;; Pred edge  3 (fallthru)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 4 class_string.h:32 (set (reg/f:SI 0 ax [72])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 30 29 31 4 class_string.h:32 (set (reg/f:SI 0 ax [orig:60 D.21170 ] [60])
        (mem/s/f/j:SI (reg/f:SI 0 ax [72]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 31 30 32 4 class_string.h:32 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 D.21170 ] [60])) 41 {*movsi_1} (nil))

(call_insn 32 31 33 4 class_string.h:32 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0xb751f500 operator delete []>) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 73

;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 33 32 34 5 10 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 class_string.h:33 (set (reg/f:SI 1 dx [orig:59 temp.64 ] [59])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 temp+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 36 35 37 5 class_string.h:33 (set (reg/f:SI 0 ax [73])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 37 36 38 5 class_string.h:33 (set (mem/s/f/j:SI (reg/f:SI 0 ax [73]) [0 <variable>._p+0 S4 A32])
        (reg/f:SI 1 dx [orig:59 temp.64 ] [59])) 41 {*movsi_1} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 58 65

;; Pred edge  2
;; Pred edge  5 (fallthru)
(code_label 38 37 39 6 9 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 51 6 class_string.h:35 (set (reg/f:SI 0 ax [orig:58 D.21174 ] [58])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 51 40 55 6 class_string.h:36 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 55 51 0 NOTE_INSN_DELETED)


;; Function int String::size() const (_ZNK6String4sizeEv)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r64: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    a6 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS
    a0 (r61,l0) best AREG, cover GENERAL_REGS
    r60: preferred Q_REGS, alternative GENERAL_REGS
    a2 (r60,l0) best Q_REGS, cover GENERAL_REGS
    r59: preferred Q_REGS, alternative GENERAL_REGS
    a3 (r59,l0) best Q_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r61,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a4(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 35(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 22(l0): point = 9
   Insn 21(l0): point = 11
   Insn 19(l0): point = 13
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 16(l0): point = 19
   Insn 15(l0): point = 21
   Insn 12(l0): point = 24
   Insn 39(l0): point = 27
   Insn 8(l0): point = 29
   Insn 7(l0): point = 31
   Insn 6(l0): point = 33
   Insn 5(l0): point = 35
 a0(r61): [3..4]
 a1(r58): [5..6]
 a2(r60): [12..15]
 a3(r59): [18..19]
 a4(r64): [20..21]
 a5(r63): [32..33]
 a6(r62): [34..35]
Compressing live ranges: from 38 to 14 - 36%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r58): [2..3]
 a2(r60): [4..5]
 a3(r59): [6..7]
 a4(r64): [8..9]
 a5(r63): [10..11]
 a6(r62): [12..13]
  regions=2, blocks=6, points=14
    allocnos=7, copies=0, conflicts=0, ranges=7
Disposition:
    1:r58  l0     0    3:r59  l0     0    2:r60  l0     0    0:r61  l0     0
    6:r62  l0     0    5:r63  l0     0    4:r64  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 62
insn=6, live_throughout: 7, dead_or_set: 62, 63
insn=7, live_throughout: 7, dead_or_set: 63
insn=8, live_throughout: 7, dead_or_set: 
insn=39, live_throughout: 7, dead_or_set: 
insn=20, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 
insn=13, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 64
insn=16, live_throughout: 7, dead_or_set: 59, 64
insn=17, live_throughout: 7, dead_or_set: 59
insn=18, live_throughout: 7, dead_or_set: 60
insn=19, live_throughout: 7, 60, dead_or_set: 
insn=21, live_throughout: 7, dead_or_set: 60
insn=22, live_throughout: 7, dead_or_set: 
insn=24, live_throughout: 7, dead_or_set: 58
insn=25, live_throughout: 7, dead_or_set: 58, 61
insn=29, live_throughout: 7, dead_or_set: 0, 61
insn=35, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 24
changing reg in insn 25
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 21
changing reg in insn 25
changing reg in insn 29
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 16
deleting insn with uid = 25.
deleting insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns


int String::size() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 17[flags]
;;  ref usage 	r0={7d,7u,1d} r1={1d} r2={1d} r6={1d,14u} r7={1d,5u} r17={4d,2u} r20={1d,1u} 
;;    total ref usage 46{16d,29u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62 63

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:43 (set (reg/f:SI 0 ax [62])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:43 (set (reg/f:SI 0 ax [63])
        (mem/s/f/j:SI (reg/f:SI 0 ax [62]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:43 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 ret+0 S4 A32])
        (reg/f:SI 0 ax [63])) 41 {*movsi_1} (nil))

(insn 8 7 39 2 class_string.h:44 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 count+0 S4 A32])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))

(jump_insn 39 8 40 2 class_string.h:45 (set (pc)
        (label_ref 13)) 459 {jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 [100.0%] 

(barrier 40 39 20)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  4
(code_label 20 40 11 3 14 "" [1 uses])

(note 11 20 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 class_string.h:47 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 count+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 64

;; Pred edge  3 (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 13 12 14 4 13 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 class_string.h:45 (set (reg/f:SI 0 ax [64])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 ret+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 16 15 17 4 class_string.h:45 (set (reg:QI 0 ax [orig:59 D.21185 ] [59])
        (mem:QI (reg/f:SI 0 ax [64]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 17 16 18 4 class_string.h:45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:59 D.21185 ] [59])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(insn 18 17 19 4 class_string.h:45 (set (reg:QI 0 ax [orig:60 retval.65 ] [60])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) 434 {*setcc_1} (expr_list:REG_EQUAL (ne:QI (reg:QI 0 ax [orig:59 D.21185 ] [59])
            (const_int 0 [0x0]))
        (nil)))

(insn 19 18 21 4 class_string.h:45 (parallel [
            (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -8 [0xfffffff8])) [0 ret+0 S4 A32])
                (plus:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -8 [0xfffffff8])) [0 ret+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 21 19 22 4 class_string.h:45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 retval.65 ] [60])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 22 21 23 4 class_string.h:45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3
;; Succ edge  5 (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 58 61

;; Pred edge  4 (fallthru)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 35 5 class_string.h:49 (set (reg:SI 0 ax [orig:58 D.21186 ] [58])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 count+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 35 24 41 5 class_string.h:50 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 41 35 0 NOTE_INSN_DELETED)


;; Function bool String::operator==(const String&) (_ZN6StringeqERKS_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 11 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r76: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS
    a9 (r74,l0) best GENERAL_REGS, cover GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS
    a10 (r73,l0) best GENERAL_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS
    a12 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS
    a14 (r71,l0) best GENERAL_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS
    a15 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS
    a16 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS
    a17 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS
    a18 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS
    a0 (r66,l0) best AREG, cover GENERAL_REGS
    r65: preferred Q_REGS, alternative GENERAL_REGS
    a13 (r65,l0) best Q_REGS, cover GENERAL_REGS
    r64: preferred Q_REGS, alternative GENERAL_REGS
    a11 (r64,l0) best Q_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred Q_REGS, alternative GENERAL_REGS
    a8 (r62,l0) best Q_REGS, cover GENERAL_REGS
    r61: preferred Q_REGS, alternative GENERAL_REGS
    a7 (r61,l0) best Q_REGS, cover GENERAL_REGS
    r60: preferred Q_REGS, alternative GENERAL_REGS
    a6 (r60,l0) best Q_REGS, cover GENERAL_REGS
    r59: preferred Q_REGS, alternative GENERAL_REGS
    a4 (r59,l0) best Q_REGS, cover GENERAL_REGS
    r58: preferred Q_REGS, alternative GENERAL_REGS
    a2 (r58,l0) best Q_REGS, cover GENERAL_REGS

  a0(r66,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:15
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a3(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a5(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a7(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a8(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a9(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a10(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a11(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a12(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a13(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a14(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a15(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a16(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a17(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a18(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 63(l0): point = 0
   Insn 57(l0): point = 2
   Insn 53(l0): point = 4
   Insn 50(l0): point = 7
   Insn 69(l0): point = 10
   Insn 45(l0): point = 12
   Insn 43(l0): point = 15
   Insn 42(l0): point = 17
   Insn 41(l0): point = 19
   Insn 40(l0): point = 21
   Insn 38(l0): point = 24
   Insn 37(l0): point = 26
   Insn 36(l0): point = 28
   Insn 35(l0): point = 30
   Insn 33(l0): point = 33
   Insn 32(l0): point = 35
   Insn 31(l0): point = 37
   Insn 30(l0): point = 39
   Insn 29(l0): point = 41
   Insn 28(l0): point = 43
   Insn 27(l0): point = 45
   Insn 26(l0): point = 47
   Insn 67(l0): point = 50
   Insn 21(l0): point = 52
   Insn 19(l0): point = 55
   Insn 18(l0): point = 57
   Insn 17(l0): point = 59
   Insn 16(l0): point = 61
   Insn 14(l0): point = 64
   Insn 13(l0): point = 66
   Insn 12(l0): point = 68
   Insn 11(l0): point = 70
   Insn 10(l0): point = 72
   Insn 9(l0): point = 74
   Insn 8(l0): point = 76
   Insn 7(l0): point = 78
   Insn 6(l0): point = 80
   Insn 5(l0): point = 82
 a0(r66): [3..4]
 a1(r63): [50..52] [10..12] [5..7]
 a2(r58): [18..19]
 a3(r76): [20..21]
 a4(r59): [27..28]
 a5(r75): [29..30]
 a6(r60): [36..37]
 a7(r61): [40..41]
 a8(r62): [40..45]
 a9(r74): [42..43]
 a10(r73): [46..47]
 a11(r64): [58..59]
 a12(r72): [60..61]
 a13(r65): [67..68]
 a14(r71): [69..70]
 a15(r70): [73..74]
 a16(r69): [75..76]
 a17(r68): [79..80]
 a18(r67): [81..82]
Compressing live ranges: from 85 to 41 - 48%
Ranges after the compression:
 a0(r66): [0..1]
 a1(r63): [23..24] [4..5] [2..3]
 a2(r58): [6..7]
 a3(r76): [8..9]
 a4(r59): [10..11]
 a5(r75): [12..13]
 a6(r60): [14..15]
 a7(r61): [16..17]
 a8(r62): [16..20]
 a9(r74): [18..19]
 a10(r73): [21..22]
 a11(r64): [25..26]
 a12(r72): [27..28]
 a13(r65): [29..30]
 a14(r71): [31..32]
 a15(r70): [33..34]
 a16(r69): [35..36]
 a17(r68): [37..38]
 a18(r67): [39..40]
  regions=2, blocks=11, points=41
    allocnos=19, copies=0, conflicts=0, ranges=21
Disposition:
    2:r58  l0     0    4:r59  l0     0    6:r60  l0     0    7:r61  l0     0
    8:r62  l0     1    1:r63  l0     0   11:r64  l0     0   13:r65  l0     0
    0:r66  l0     0   18:r67  l0     0   17:r68  l0     0   16:r69  l0     0
   15:r70  l0     0   14:r71  l0     0   12:r72  l0     0   10:r73  l0     0
    9:r74  l0     0    5:r75  l0     0    3:r76  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 67
insn=6, live_throughout: 7, dead_or_set: 67, 68
insn=7, live_throughout: 7, dead_or_set: 68
insn=8, live_throughout: 7, dead_or_set: 69
insn=9, live_throughout: 7, dead_or_set: 69, 70
insn=10, live_throughout: 7, dead_or_set: 70
insn=11, live_throughout: 7, dead_or_set: 71
insn=12, live_throughout: 7, dead_or_set: 65, 71
insn=13, live_throughout: 7, dead_or_set: 65
insn=14, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 72
insn=17, live_throughout: 7, dead_or_set: 64, 72
insn=18, live_throughout: 7, dead_or_set: 64
insn=19, live_throughout: 7, dead_or_set: 
insn=21, live_throughout: 7, dead_or_set: 63
insn=67, live_throughout: 7, 63, dead_or_set: 
insn=24, live_throughout: 7, dead_or_set: 
insn=26, live_throughout: 7, dead_or_set: 73
insn=27, live_throughout: 7, dead_or_set: 62, 73
insn=28, live_throughout: 7, 62, dead_or_set: 74
insn=29, live_throughout: 7, 62, dead_or_set: 61, 74
insn=30, live_throughout: 7, dead_or_set: 61, 62
insn=31, live_throughout: 7, dead_or_set: 60
insn=32, live_throughout: 7, dead_or_set: 60
insn=33, live_throughout: 7, dead_or_set: 
insn=35, live_throughout: 7, dead_or_set: 75
insn=36, live_throughout: 7, dead_or_set: 59, 75
insn=37, live_throughout: 7, dead_or_set: 59
insn=38, live_throughout: 7, dead_or_set: 
insn=40, live_throughout: 7, dead_or_set: 76
insn=41, live_throughout: 7, dead_or_set: 58, 76
insn=42, live_throughout: 7, dead_or_set: 58
insn=43, live_throughout: 7, dead_or_set: 
insn=45, live_throughout: 7, dead_or_set: 63
insn=69, live_throughout: 7, 63, dead_or_set: 
insn=48, live_throughout: 7, dead_or_set: 
insn=50, live_throughout: 7, dead_or_set: 63
insn=51, live_throughout: 7, 63, dead_or_set: 
insn=53, live_throughout: 7, dead_or_set: 63, 66
insn=57, live_throughout: 7, dead_or_set: 0, 66
insn=63, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 41
changing reg in insn 42
changing reg in insn 36
changing reg in insn 37
changing reg in insn 31
changing reg in insn 32
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 27
changing reg in insn 30
changing reg in insn 31
changing reg in insn 50
changing reg in insn 45
changing reg in insn 21
changing reg in insn 53
changing reg in insn 17
changing reg in insn 18
changing reg in insn 12
changing reg in insn 13
changing reg in insn 53
changing reg in insn 57
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
deleting insn with uid = 53.
deleting insn with uid = 57.
starting the processing of deferred insns
ending the processing of deferred insns


bool String::operator==(const String&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 17[flags]
;;  ref usage 	r0={20d,18u,1d} r1={2d,1u,1d} r2={1d} r6={1d,20u} r7={1d,10u} r17={6d,6u} r20={1d,1u} 
;;    total ref usage 90{32d,56u,2e} in 36{36 regular + 0 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 67 68 69 70 71

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:75 (set (reg/f:SI 0 ax [67])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:75 (set (reg/f:SI 0 ax [68])
        (mem/s/f/j:SI (reg/f:SI 0 ax [67]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:75 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 left+0 S4 A32])
        (reg/f:SI 0 ax [68])) 41 {*movsi_1} (nil))

(insn 8 7 9 2 class_string.h:76 (set (reg/f:SI 0 ax [69])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 9 8 10 2 class_string.h:76 (set (reg/f:SI 0 ax [70])
        (mem/s/f/j:SI (reg/f:SI 0 ax [69]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 10 9 11 2 class_string.h:76 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 right+0 S4 A32])
        (reg/f:SI 0 ax [70])) 41 {*movsi_1} (nil))

(insn 11 10 12 2 class_string.h:77 (set (reg/f:SI 0 ax [71])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 right+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 12 11 13 2 class_string.h:77 (set (reg:QI 0 ax [orig:65 D.21204 ] [65])
        (mem:QI (reg/f:SI 0 ax [71]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 13 12 14 2 class_string.h:77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:65 D.21204 ] [65])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 14 13 15 2 class_string.h:77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  5

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 72

;; Pred edge  2 (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 class_string.h:77 (set (reg/f:SI 0 ax [72])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 left+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 17 16 18 3 class_string.h:77 (set (reg:QI 0 ax [orig:64 D.21207 ] [64])
        (mem:QI (reg/f:SI 0 ax [72]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 18 17 19 3 class_string.h:77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 D.21207 ] [64])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 19 18 20 3 class_string.h:77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63

;; Pred edge  3 (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 67 4 class_string.h:77 (set (reg:QI 0 ax [orig:63 D.21210 ] [63])
        (const_int 1 [0x1])) 50 {*movqi_1} (nil))

(jump_insn 67 21 68 4 class_string.h:77 (set (pc)
        (label_ref 51)) 459 {jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  10 [100.0%] 

(barrier 68 67 24)

;; Start of basic block ( 2 3 5) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 73 74

;; Pred edge  2
;; Pred edge  3
;; Pred edge  5
(code_label 24 68 25 5 17 "" [3 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 class_string.h:78 (set (reg/f:SI 0 ax [73])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 left+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 27 26 28 5 class_string.h:78 (set (reg:QI 1 dx [orig:62 D.21214 ] [62])
        (mem:QI (reg/f:SI 0 ax [73]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 28 27 29 5 class_string.h:78 (set (reg/f:SI 0 ax [74])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 right+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 29 28 30 5 class_string.h:78 (set (reg:QI 0 ax [orig:61 D.21215 ] [61])
        (mem:QI (reg/f:SI 0 ax [74]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 30 29 31 5 class_string.h:78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:62 D.21214 ] [62])
            (reg:QI 0 ax [orig:61 D.21215 ] [61]))) 7 {*cmpqi_1} (nil))

(insn 31 30 32 5 class_string.h:78 (set (reg:QI 0 ax [orig:60 D.21216 ] [60])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) 434 {*setcc_1} (expr_list:REG_EQUAL (eq:QI (reg:QI 1 dx [orig:62 D.21214 ] [62])
            (reg:QI 0 ax [orig:61 D.21215 ] [61]))
        (nil)))

(insn 32 31 33 5 class_string.h:78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.21216 ] [60])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 33 32 34 5 class_string.h:78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  5
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 75

;; Pred edge  5 (fallthru)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 class_string.h:79 (set (reg/f:SI 0 ax [75])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 left+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 36 35 37 6 class_string.h:79 (set (reg:QI 0 ax [orig:59 D.21218 ] [59])
        (mem:QI (reg/f:SI 0 ax [75]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 37 36 38 6 class_string.h:79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:59 D.21218 ] [59])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 38 37 39 6 class_string.h:79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  7 (fallthru)
;; Succ edge  9

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 58 76

;; Pred edge  6 (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 class_string.h:79 (set (reg/f:SI 0 ax [76])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 right+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 41 40 42 7 class_string.h:79 (set (reg:QI 0 ax [orig:58 D.21220 ] [58])
        (mem:QI (reg/f:SI 0 ax [76]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 42 41 43 7 class_string.h:79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:58 D.21220 ] [58])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 43 42 44 7 class_string.h:79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63

;; Pred edge  7 (fallthru)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 69 8 class_string.h:80 (set (reg:QI 0 ax [orig:63 D.21210 ] [63])
        (const_int 1 [0x1])) 50 {*movqi_1} (nil))

(jump_insn 69 45 70 8 class_string.h:80 (set (pc)
        (label_ref 51)) 459 {jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  10 [100.0%] 

(barrier 70 69 48)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 63

;; Pred edge  6
;; Pred edge  7
(code_label 48 70 49 9 19 "" [2 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 9 class_string.h:82 (set (reg:QI 0 ax [orig:63 D.21210 ] [63])
        (const_int 0 [0x0])) 50 {*movqi_1} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63


;; Succ edge  10 (fallthru)

;; Start of basic block ( 9 4 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
;; lr  def 	 0 [ax] 66

;; Pred edge  9 (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  8 [100.0%] 
(code_label 51 50 52 10 18 "" [2 uses])

(note 52 51 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 63 52 71 10 class_string.h:83 (use (reg/i:QI 0 ax)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 71 63 0 NOTE_INSN_DELETED)


;; Function bool String::operator!=(const String&) (_ZN6StringneERKS_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r63: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS
    a0 (r61,l0) best AREG, cover GENERAL_REGS
    r60: preferred Q_REGS, alternative GENERAL_REGS
    a2 (r60,l0) best Q_REGS, cover GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS
    a3 (r59,l0) best AREG, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r61,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a2(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a3(r59,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a4(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 33(l0): point = 0
   Insn 27(l0): point = 2
   Insn 23(l0): point = 4
   Insn 20(l0): point = 7
   Insn 37(l0): point = 10
   Insn 15(l0): point = 12
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 10(l0): point = 21
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
 a0(r61): [3..4]
 a1(r58): [10..12] [5..7]
 a2(r60): [18..19]
 a3(r59): [20..21]
 a4(r63): [26..27]
 a5(r62): [30..31]
Compressing live ranges: from 34 to 14 - 41%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r58): [4..5] [2..3]
 a2(r60): [6..7]
 a3(r59): [8..9]
 a4(r63): [10..11]
 a5(r62): [12..13]
  regions=1, blocks=6, points=14
    allocnos=6, copies=0, conflicts=0, ranges=7
Disposition:
    1:r58  l0     0    3:r59  l0     0    2:r60  l0     0    0:r61  l0     0
    5:r62  l0     0    4:r63  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 62
insn=6, live_throughout: 7, dead_or_set: 62
insn=7, live_throughout: 7, dead_or_set: 63
insn=8, live_throughout: 7, dead_or_set: 63
insn=9, live_throughout: 7, dead_or_set: 0
insn=10, live_throughout: 7, dead_or_set: 0, 59
insn=11, live_throughout: 7, dead_or_set: 59, 60
insn=12, live_throughout: 7, dead_or_set: 60
insn=13, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 58
insn=37, live_throughout: 7, 58, dead_or_set: 
insn=18, live_throughout: 7, dead_or_set: 
insn=20, live_throughout: 7, dead_or_set: 58
insn=21, live_throughout: 7, 58, dead_or_set: 
insn=23, live_throughout: 7, dead_or_set: 58, 61
insn=27, live_throughout: 7, dead_or_set: 0, 61
insn=33, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 20
changing reg in insn 15
changing reg in insn 23
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 23
changing reg in insn 27
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
deleting insn with uid = 10.
deleting insn with uid = 11.
deleting insn with uid = 23.
deleting insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.


bool String::operator!=(const String&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,5u} r1={2d} r2={2d} r6={1d,7u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d,1u} r18={1d} r19={1d} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 79{57d,22u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 60 62 63

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:86 (set (reg/f:SI 0 ax [62])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:86 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [62])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:86 (set (reg/f:SI 0 ax [63])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 8 7 9 2 class_string.h:86 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [63])) 41 {*movsi_1} (nil))

(call_insn 9 8 12 2 class_string.h:86 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:SI ("_ZN6StringeqERKS_") [flags 0x1]  <function_decl 0xb6b0ff80 operator==>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 12 9 13 2 class_string.h:86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 retval.68 ] [60])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 13 12 14 2 class_string.h:86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  4

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 58

;; Pred edge  2 (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 37 3 class_string.h:86 (set (reg:QI 0 ax [orig:58 D.21227 ] [58])
        (const_int 0 [0x0])) 50 {*movqi_1} (nil))

(jump_insn 37 15 38 3 class_string.h:86 (set (pc)
        (label_ref 21)) 459 {jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


;; Succ edge  5 [100.0%] 

(barrier 38 37 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 58

;; Pred edge  2
(code_label 18 38 19 4 22 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 class_string.h:87 (set (reg:QI 0 ax [orig:58 D.21227 ] [58])
        (const_int 1 [0x1])) 50 {*movqi_1} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58


;; Succ edge  5 (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58
;; lr  def 	 0 [ax] 61

;; Pred edge  4 (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 21 20 22 5 23 "" [1 uses])

(note 22 21 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 22 39 5 class_string.h:88 (use (reg/i:QI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 33 0 NOTE_INSN_DELETED)


;; Function String::~String() (_ZN6StringD2Ev)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r62: preferred GENERAL_REGS, alternative NO_REGS
    a0 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a2(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 11(l0): point = 9
   Insn 10(l0): point = 11
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 5(l0): point = 20
 a0(r62): [1..2]
 a1(r58): [8..9]
 a2(r61): [10..11]
 a3(r59): [17..18]
 a4(r60): [19..20]
Compressing live ranges: from 23 to 10 - 43%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r58): [2..3]
 a2(r61): [4..5]
 a3(r59): [6..7]
 a4(r60): [8..9]
  regions=1, blocks=5, points=10
    allocnos=5, copies=0, conflicts=0, ranges=5
Disposition:
    1:r58  l0     0    3:r59  l0     0    4:r60  l0     0    2:r61  l0     0
    0:r62  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 60
insn=6, live_throughout: 7, dead_or_set: 59, 60
insn=7, live_throughout: 7, dead_or_set: 59
insn=8, live_throughout: 7, dead_or_set: 
insn=10, live_throughout: 7, dead_or_set: 61
insn=11, live_throughout: 7, dead_or_set: 58, 61
insn=12, live_throughout: 7, dead_or_set: 58
insn=13, live_throughout: 7, dead_or_set: 
insn=14, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 62
insn=17, live_throughout: 7, dead_or_set: 62
changing reg in insn 11
changing reg in insn 12
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 11
changing reg in insn 16
changing reg in insn 17
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.


String::~String()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,5u} r1={2d} r2={2d} r6={1d,7u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d,1u} r18={1d} r19={1d} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 78{58d,20u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:96 (set (reg/f:SI 0 ax [60])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:96 (set (reg/f:SI 0 ax [orig:59 D.21246 ] [59])
        (mem/s/f/j:SI (reg/f:SI 0 ax [60]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:59 D.21246 ] [59])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil))

(jump_insn 8 7 9 2 class_string.h:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  4

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 61

;; Pred edge  2 (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 class_string.h:96 (set (reg/f:SI 0 ax [61])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 11 10 12 3 class_string.h:96 (set (reg/f:SI 0 ax [orig:58 D.21249 ] [58])
        (mem/s/f/j:SI (reg/f:SI 0 ax [61]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 12 11 13 3 class_string.h:96 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.21249 ] [58])) 41 {*movsi_1} (nil))

(call_insn 13 12 14 3 class_string.h:96 (call (mem:QI (symbol_ref:SI ("_ZdaPv") [flags 0x41]  <function_decl 0xb751f500 operator delete []>) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62

;; Pred edge  2
;; Pred edge  3 (fallthru)
(code_label 14 13 15 4 26 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 class_string.h:97 (set (reg/f:SI 0 ax [62])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 this+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 17 16 27 4 class_string.h:97 (set (mem/s/f/j:SI (reg/f:SI 0 ax [62]) [0 <variable>._p+0 S4 A32])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 17 0 NOTE_INSN_DELETED)


;; Function void String::copy(char**, const char*) (_ZN6String4copyEPPcPKc)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r66: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS
    a8 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS
    a7 (r62,l0) best AREG, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    a6 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS
    a5 (r60,l0) best AREG, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a0 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a1(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a2(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r60,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a6(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a7(r62,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a8(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 5(l0): point = 32
 a0(r58): [3..8]
 a1(r66): [5..6]
 a2(r65): [9..10]
 a3(r64): [13..14]
 a4(r59): [13..16]
 a5(r60): [17..18]
 a6(r61): [23..24]
 a7(r62): [25..26]
 a8(r63): [31..32]
Compressing live ranges: from 35 to 17 - 48%
Ranges after the compression:
 a0(r58): [0..3]
 a1(r66): [1..2]
 a2(r65): [4..5]
 a3(r64): [6..7]
 a4(r59): [6..8]
 a5(r60): [9..10]
 a6(r61): [11..12]
 a7(r62): [13..14]
 a8(r63): [15..16]
  regions=1, blocks=3, points=17
    allocnos=9, copies=0, conflicts=0, ranges=9
Disposition:
    0:r58  l0     0    4:r59  l0     1    5:r60  l0     0    6:r61  l0     0
    7:r62  l0     0    8:r63  l0     0    3:r64  l0     0    2:r65  l0     0
    1:r66  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 63
insn=6, live_throughout: 7, dead_or_set: 63
insn=7, live_throughout: 7, dead_or_set: 0
insn=8, live_throughout: 7, dead_or_set: 0, 62
insn=9, live_throughout: 7, dead_or_set: 61, 62
insn=10, live_throughout: 7, dead_or_set: 61
insn=11, live_throughout: 7, dead_or_set: 0
insn=12, live_throughout: 7, dead_or_set: 0, 60
insn=13, live_throughout: 7, dead_or_set: 59, 60
insn=14, live_throughout: 7, 59, dead_or_set: 64
insn=15, live_throughout: 7, dead_or_set: 59, 64
insn=16, live_throughout: 7, dead_or_set: 65
insn=17, live_throughout: 7, dead_or_set: 58, 65
insn=18, live_throughout: 7, 58, dead_or_set: 66
insn=19, live_throughout: 7, 58, dead_or_set: 66
insn=20, live_throughout: 7, dead_or_set: 58
insn=21, live_throughout: 7, dead_or_set: 0
changing reg in insn 17
changing reg in insn 20
changing reg in insn 13
changing reg in insn 15
changing reg in insn 12
changing reg in insn 13
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 5
changing reg in insn 6
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 21.


void String::copy(char**, const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,7u} r1={6d,2u} r2={4d} r6={1d,6u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d} r18={3d} r19={3d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 178{152d,26u,0e} in 15{12 regular + 3 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 59 60 61 62 63 64 65 66

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:102 (set (reg/f:SI 0 ax [63])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 dest+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:102 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [63])) 41 {*movsi_1} (nil))

(call_insn/i 7 6 9 2 class_string.h:102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0xb74d6780 strlen>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32]))
        (nil)))

(insn 9 7 10 2 class_string.h:102 (parallel [
            (set (reg:SI 0 ax [orig:61 D.21256 ] [61])
                (plus:SI (reg:SI 0 ax [orig:62 D.21255 ] [62])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 10 9 11 2 class_string.h:102 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [orig:61 D.21256 ] [61])) 41 {*movsi_1} (nil))

(call_insn 11 10 13 2 class_string.h:102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x41]  <function_decl 0xb751f400 operator new []>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (nil)
    (nil))

(insn 13 11 14 2 class_string.h:102 (set (reg/f:SI 1 dx [orig:59 D.21258 ] [59])
        (reg/f:SI 0 ax [orig:60 D.21257 ] [60])) 41 {*movsi_1} (nil))

(insn 14 13 15 2 class_string.h:102 (set (reg/f:SI 0 ax [64])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 src+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 15 14 16 2 class_string.h:102 (set (mem/f:SI (reg/f:SI 0 ax [64]) [0 S4 A32])
        (reg/f:SI 1 dx [orig:59 D.21258 ] [59])) 41 {*movsi_1} (nil))

(insn 16 15 17 2 class_string.h:103 (set (reg/f:SI 0 ax [65])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 src+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 17 16 18 2 class_string.h:103 (set (reg/f:SI 0 ax [orig:58 D.21259 ] [58])
        (mem/f:SI (reg/f:SI 0 ax [65]) [0 S4 A32])) 41 {*movsi_1} (nil))

(insn 18 17 19 2 class_string.h:103 (set (reg/f:SI 1 dx [66])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 dest+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 19 18 20 2 class_string.h:103 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 1 dx [66])) 41 {*movsi_1} (nil))

(insn 20 19 21 2 class_string.h:103 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.21259 ] [58])) 41 {*movsi_1} (nil))

(call_insn 21 20 29 2 class_string.h:103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0xb74d6180 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 29 21 0 NOTE_INSN_DELETED)


;; Function std::ostream& operator<<(std::ostream&, String&) (_ZlsRSoR6String)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r62: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS
    a0 (r60,l0) best AREG, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a1 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r60,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 22(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
 a0(r60): [3..4]
 a1(r58): [5..6]
 a2(r62): [11..12]
 a3(r59): [15..16]
 a4(r61): [17..18]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r58): [2..3]
 a2(r62): [4..5]
 a3(r59): [6..7]
 a4(r61): [8..9]
  regions=1, blocks=3, points=10
    allocnos=5, copies=0, conflicts=0, ranges=5
Disposition:
    1:r58  l0     0    3:r59  l0     0    0:r60  l0     0    4:r61  l0     0
    2:r62  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 61
insn=6, live_throughout: 7, dead_or_set: 59, 61
insn=7, live_throughout: 7, dead_or_set: 59
insn=8, live_throughout: 7, dead_or_set: 62
insn=9, live_throughout: 7, dead_or_set: 62
insn=10, live_throughout: 7, dead_or_set: 0
insn=11, live_throughout: 7, dead_or_set: 58
insn=12, live_throughout: 7, dead_or_set: 58, 60
insn=16, live_throughout: 7, dead_or_set: 0, 60
insn=22, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 11
changing reg in insn 12
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 16
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 12.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


std::ostream& operator<<(std::ostream&, String&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp]
;;  ref usage 	r0={6d,5u} r1={2d} r2={2d} r6={1d,5u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 72{56d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 59 60 61 62

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.h:110 (set (reg/f:SI 0 ax [61])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 str+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.h:110 (set (reg/f:SI 0 ax [orig:59 D.21264 ] [59])
        (mem/s/f/j:SI (reg/f:SI 0 ax [61]) [0 <variable>._p+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 7 6 8 2 class_string.h:110 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:59 D.21264 ] [59])) 41 {*movsi_1} (nil))

(insn 8 7 9 2 class_string.h:110 (set (reg/f:SI 0 ax [62])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 _cout+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 9 8 10 2 class_string.h:110 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [62])) 41 {*movsi_1} (nil))

(call_insn 10 9 11 2 class_string.h:110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0xb6c49300 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (nil)
    (nil))

(insn 11 10 22 2 class_string.h:111 (set (reg/f:SI 0 ax [orig:58 D.21265 ] [58])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 _cout+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 22 11 26 2 class_string.h:112 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 22 0 NOTE_INSN_DELETED)


;; Function int main() (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 39 count 25 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS
    a13 (r94,l0) best GENERAL_REGS, cover GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS
    a4 (r93,l0) best GENERAL_REGS, cover GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS
    a14 (r92,l0) best GENERAL_REGS, cover GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS
    a7 (r91,l0) best GENERAL_REGS, cover GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS
    a10 (r90,l0) best GENERAL_REGS, cover GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS
    a0 (r89,l0) best AREG, cover GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS
    a1 (r88,l0) best DREG, cover GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS
    a15 (r87,l0) best GENERAL_REGS, cover GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS
    a18 (r86,l0) best GENERAL_REGS, cover GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS
    a20 (r85,l0) best GENERAL_REGS, cover GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS
    a21 (r84,l0) best GENERAL_REGS, cover GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS
    a22 (r83,l0) best GENERAL_REGS, cover GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS
    a23 (r82,l0) best GENERAL_REGS, cover GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS
    a28 (r81,l0) best GENERAL_REGS, cover GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS
    a29 (r80,l0) best GENERAL_REGS, cover GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS
    a31 (r79,l0) best GENERAL_REGS, cover GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS
    a32 (r78,l0) best GENERAL_REGS, cover GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS
    a33 (r77,l0) best GENERAL_REGS, cover GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS
    a35 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS
    a36 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS
    a11 (r74,l0) best AREG, cover GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS
    a34 (r73,l0) best AREG, cover GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS
    a30 (r72,l0) best AREG, cover GENERAL_REGS
    r71: preferred Q_REGS, alternative GENERAL_REGS
    a26 (r71,l0) best Q_REGS, cover GENERAL_REGS
    r70: preferred AREG, alternative GENERAL_REGS
    a27 (r70,l0) best AREG, cover GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS
    a25 (r69,l0) best AREG, cover GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS
    a24 (r68,l0) best AREG, cover GENERAL_REGS
    r67: preferred AREG, alternative GENERAL_REGS
    a19 (r67,l0) best AREG, cover GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS
    a17 (r66,l0) best AREG, cover GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS
    a16 (r65,l0) best AREG, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS
    a12 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS
    a9 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    a8 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    a6 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    a5 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS
    a3 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS
    a2 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r89,l0) costs: AREG:-3,-3 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:37
  a1(r88,l0) costs: AREG:0,0 DREG:-3,-3 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:33
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a3(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a6(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a7(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a8(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a9(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a10(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a11(r74,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a12(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a13(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a14(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a15(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a16(r65,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a17(r66,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a18(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a19(r67,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a20(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a21(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a22(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a23(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a24(r68,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a25(r69,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a26(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a27(r70,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a28(r81,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a29(r80,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a30(r72,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a31(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a32(r78,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a33(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a34(r73,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a35(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a36(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 180(l0): point = 0
   Insn 179(l0): point = 2
   Insn 146(l0): point = 4
   Insn 145(l0): point = 6
   Insn 144(l0): point = 8
   Insn 143(l0): point = 10
   Insn 142(l0): point = 12
   Insn 141(l0): point = 14
   Insn 140(l0): point = 16
   Insn 192(l0): point = 19
   Insn 191(l0): point = 21
   Insn 199(l0): point = 24
   Insn 128(l0): point = 26
   Insn 127(l0): point = 28
   Insn 126(l0): point = 30
   Insn 125(l0): point = 32
   Insn 124(l0): point = 34
   Insn 123(l0): point = 36
   Insn 122(l0): point = 38
   Insn 188(l0): point = 41
   Insn 187(l0): point = 43
   Insn 197(l0): point = 46
   Insn 117(l0): point = 48
   Insn 116(l0): point = 50
   Insn 115(l0): point = 52
   Insn 114(l0): point = 54
   Insn 113(l0): point = 56
   Insn 112(l0): point = 58
   Insn 111(l0): point = 60
   Insn 184(l0): point = 62
   Insn 183(l0): point = 64
   Insn 164(l0): point = 67
   Insn 158(l0): point = 69
   Insn 154(l0): point = 71
   Insn 153(l0): point = 73
   Insn 152(l0): point = 75
   Insn 151(l0): point = 77
   Insn 135(l0): point = 79
   Insn 134(l0): point = 81
   Insn 133(l0): point = 83
   Insn 106(l0): point = 85
   Insn 105(l0): point = 87
   Insn 104(l0): point = 89
   Insn 103(l0): point = 91
   Insn 101(l0): point = 94
   Insn 100(l0): point = 96
   Insn 99(l0): point = 98
   Insn 97(l0): point = 100
   Insn 96(l0): point = 103
   Insn 95(l0): point = 105
   Insn 94(l0): point = 107
   Insn 92(l0): point = 109
   Insn 91(l0): point = 111
   Insn 90(l0): point = 113
   Insn 89(l0): point = 115
   Insn 87(l0): point = 118
   Insn 86(l0): point = 120
   Insn 85(l0): point = 122
   Insn 83(l0): point = 124
   Insn 82(l0): point = 127
   Insn 81(l0): point = 129
   Insn 80(l0): point = 131
   Insn 79(l0): point = 133
   Insn 77(l0): point = 136
   Insn 76(l0): point = 138
   Insn 75(l0): point = 140
   Insn 74(l0): point = 142
   Insn 73(l0): point = 144
   Insn 71(l0): point = 147
   Insn 70(l0): point = 149
   Insn 69(l0): point = 151
   Insn 68(l0): point = 153
   Insn 65(l0): point = 156
   Insn 64(l0): point = 158
   Insn 63(l0): point = 160
   Insn 61(l0): point = 162
   Insn 60(l0): point = 165
   Insn 59(l0): point = 167
   Insn 58(l0): point = 169
   Insn 195(l0): point = 172
   Insn 53(l0): point = 175
   Insn 52(l0): point = 177
   Insn 51(l0): point = 179
   Insn 49(l0): point = 181
   Insn 48(l0): point = 184
   Insn 47(l0): point = 186
   Insn 46(l0): point = 188
   Insn 44(l0): point = 191
   Insn 43(l0): point = 193
   Insn 42(l0): point = 195
   Insn 40(l0): point = 197
   Insn 39(l0): point = 199
   Insn 38(l0): point = 201
   Insn 37(l0): point = 203
   Insn 36(l0): point = 205
   Insn 35(l0): point = 207
   Insn 33(l0): point = 210
   Insn 32(l0): point = 212
   Insn 31(l0): point = 214
   Insn 29(l0): point = 216
   Insn 28(l0): point = 219
   Insn 27(l0): point = 221
   Insn 26(l0): point = 223
   Insn 25(l0): point = 225
   Insn 23(l0): point = 228
   Insn 22(l0): point = 230
   Insn 21(l0): point = 232
   Insn 20(l0): point = 234
   Insn 19(l0): point = 236
   Insn 17(l0): point = 239
   Insn 16(l0): point = 241
   Insn 15(l0): point = 243
   Insn 13(l0): point = 245
   Insn 12(l0): point = 248
   Insn 11(l0): point = 250
   Insn 10(l0): point = 252
   Insn 9(l0): point = 254
   Insn 8(l0): point = 256
   Insn 7(l0): point = 258
   Insn 6(l0): point = 260
   Insn 5(l0): point = 262
 a0(r89): [59..64] [46..50] [37..43] [24..28] [15..21] [3..6]
 a1(r88): [61..62] [46..48] [39..41] [24..26] [17..19] [4..4]
 a2(r58): [5..16]
 a3(r59): [7..14]
 a4(r93): [11..12]
 a5(r60): [27..38]
 a6(r61): [29..36]
 a7(r91): [33..34]
 a8(r62): [49..60]
 a9(r63): [51..58]
 a10(r90): [55..56]
 a11(r74): [70..71]
 a12(r64): [72..91]
 a13(r94): [76..77]
 a14(r92): [82..83]
 a15(r87): [88..89]
 a16(r65): [97..100]
 a17(r66): [108..109]
 a18(r86): [114..115]
 a19(r67): [121..124]
 a20(r85): [132..133]
 a21(r84): [139..140]
 a22(r83): [143..144]
 a23(r82): [150..151]
 a24(r68): [159..162]
 a25(r69): [178..181]
 a26(r71): [194..195]
 a27(r70): [196..197]
 a28(r81): [202..203]
 a29(r80): [206..207]
 a30(r72): [213..216]
 a31(r79): [224..225]
 a32(r78): [231..232]
 a33(r77): [235..236]
 a34(r73): [242..245]
 a35(r76): [253..254]
 a36(r75): [259..260]
Compressing live ranges: from 265 to 91 - 34%
Ranges after the compression:
 a0(r89): [34..38] [26..29] [21..25] [13..16] [8..12] [0..3]
 a1(r88): [36..37] [26..27] [23..24] [13..14] [10..11] [1..1]
 a2(r58): [2..9]
 a3(r59): [4..7]
 a4(r93): [5..6]
 a5(r60): [15..22]
 a6(r61): [17..20]
 a7(r91): [18..19]
 a8(r62): [28..35]
 a9(r63): [30..33]
 a10(r90): [31..32]
 a11(r74): [39..40]
 a12(r64): [41..48]
 a13(r94): [42..43]
 a14(r92): [44..45]
 a15(r87): [46..47]
 a16(r65): [49..50]
 a17(r66): [51..52]
 a18(r86): [53..54]
 a19(r67): [55..56]
 a20(r85): [57..58]
 a21(r84): [59..60]
 a22(r83): [61..62]
 a23(r82): [63..64]
 a24(r68): [65..66]
 a25(r69): [67..68]
 a26(r71): [69..70]
 a27(r70): [71..72]
 a28(r81): [73..74]
 a29(r80): [75..76]
 a30(r72): [77..78]
 a31(r79): [79..80]
 a32(r78): [81..82]
 a33(r77): [83..84]
 a34(r73): [85..86]
 a35(r76): [87..88]
 a36(r75): [89..90]
  regions=1, blocks=25, points=91
    allocnos=37, copies=0, conflicts=0, ranges=47
Disposition:
    2:r58  l0     3    3:r59  l0     4    5:r60  l0     3    6:r61  l0     4
    8:r62  l0     3    9:r63  l0     4   12:r64  l0     3   16:r65  l0     0
   17:r66  l0     0   19:r67  l0     0   24:r68  l0     0   25:r69  l0     0
   27:r70  l0     0   26:r71  l0     0   30:r72  l0     0   34:r73  l0     0
   11:r74  l0     0   36:r75  l0     0   35:r76  l0     0   33:r77  l0     0
   32:r78  l0     0   31:r79  l0     0   29:r80  l0     0   28:r81  l0     0
   23:r82  l0     0   22:r83  l0     0   21:r84  l0     0   20:r85  l0     0
   18:r86  l0     0   15:r87  l0     0    1:r88  l0     1    0:r89  l0     0
   10:r90  l0     0    7:r91  l0     0   14:r92  l0     0    4:r93  l0     0
   13:r94  l0     0
+++Costs: overall -15, reg -15, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 75
insn=7, live_throughout: 7, dead_or_set: 75
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 76
insn=10, live_throughout: 7, dead_or_set: 76
insn=11, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 0
insn=13, live_throughout: 7, dead_or_set: 0, 73
insn=15, live_throughout: 7, 73, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 73
insn=17, live_throughout: 7, dead_or_set: 0
insn=19, live_throughout: 7, dead_or_set: 77
insn=20, live_throughout: 7, dead_or_set: 77
insn=21, live_throughout: 7, dead_or_set: 78
insn=22, live_throughout: 7, dead_or_set: 78
insn=23, live_throughout: 7, dead_or_set: 
insn=25, live_throughout: 7, dead_or_set: 79
insn=26, live_throughout: 7, dead_or_set: 79
insn=27, live_throughout: 7, dead_or_set: 
insn=28, live_throughout: 7, dead_or_set: 0
insn=29, live_throughout: 7, dead_or_set: 0, 72
insn=31, live_throughout: 7, 72, dead_or_set: 
insn=32, live_throughout: 7, dead_or_set: 72
insn=33, live_throughout: 7, dead_or_set: 0
insn=35, live_throughout: 7, dead_or_set: 80
insn=36, live_throughout: 7, dead_or_set: 80
insn=37, live_throughout: 7, dead_or_set: 81
insn=38, live_throughout: 7, dead_or_set: 81
insn=39, live_throughout: 7, dead_or_set: 0
insn=40, live_throughout: 7, dead_or_set: 0, 70
insn=42, live_throughout: 7, dead_or_set: 70, 71
insn=43, live_throughout: 7, dead_or_set: 71
insn=44, live_throughout: 7, dead_or_set: 
insn=46, live_throughout: 7, dead_or_set: 
insn=47, live_throughout: 7, dead_or_set: 
insn=48, live_throughout: 7, dead_or_set: 0
insn=49, live_throughout: 7, dead_or_set: 0, 69
insn=51, live_throughout: 7, 69, dead_or_set: 
insn=52, live_throughout: 7, dead_or_set: 69
insn=53, live_throughout: 7, dead_or_set: 0
insn=195, live_throughout: 7, dead_or_set: 
insn=56, live_throughout: 7, dead_or_set: 
insn=58, live_throughout: 7, dead_or_set: 
insn=59, live_throughout: 7, dead_or_set: 
insn=60, live_throughout: 7, dead_or_set: 0
insn=61, live_throughout: 7, dead_or_set: 0, 68
insn=63, live_throughout: 7, 68, dead_or_set: 
insn=64, live_throughout: 7, dead_or_set: 68
insn=65, live_throughout: 7, dead_or_set: 0
insn=66, live_throughout: 7, dead_or_set: 
insn=68, live_throughout: 7, dead_or_set: 
insn=69, live_throughout: 7, dead_or_set: 82
insn=70, live_throughout: 7, dead_or_set: 82
insn=71, live_throughout: 7, dead_or_set: 
insn=73, live_throughout: 7, dead_or_set: 83
insn=74, live_throughout: 7, dead_or_set: 83
insn=75, live_throughout: 7, dead_or_set: 84
insn=76, live_throughout: 7, dead_or_set: 84
insn=77, live_throughout: 7, dead_or_set: 0
insn=79, live_throughout: 7, dead_or_set: 85
insn=80, live_throughout: 7, dead_or_set: 85
insn=81, live_throughout: 7, dead_or_set: 
insn=82, live_throughout: 7, dead_or_set: 0
insn=83, live_throughout: 7, dead_or_set: 0, 67
insn=85, live_throughout: 7, 67, dead_or_set: 
insn=86, live_throughout: 7, dead_or_set: 67
insn=87, live_throughout: 7, dead_or_set: 0
insn=89, live_throughout: 7, dead_or_set: 86
insn=90, live_throughout: 7, dead_or_set: 86
insn=91, live_throughout: 7, dead_or_set: 0
insn=92, live_throughout: 7, dead_or_set: 0, 66
insn=94, live_throughout: 7, dead_or_set: 66
insn=95, live_throughout: 7, dead_or_set: 
insn=96, live_throughout: 7, dead_or_set: 0
insn=97, live_throughout: 7, dead_or_set: 0, 65
insn=99, live_throughout: 7, 65, dead_or_set: 
insn=100, live_throughout: 7, dead_or_set: 65
insn=101, live_throughout: 7, dead_or_set: 0
insn=103, live_throughout: 7, dead_or_set: 64
insn=104, live_throughout: 7, 64, dead_or_set: 87
insn=105, live_throughout: 7, 64, dead_or_set: 87
insn=106, live_throughout: 7, 64, dead_or_set: 
insn=133, live_throughout: 7, 64, dead_or_set: 92
insn=134, live_throughout: 7, 64, dead_or_set: 92
insn=135, live_throughout: 7, 64, dead_or_set: 
insn=151, live_throughout: 7, 64, dead_or_set: 94
insn=152, live_throughout: 7, 64, dead_or_set: 94
insn=153, live_throughout: 7, 64, dead_or_set: 
insn=154, live_throughout: 7, dead_or_set: 64, 74
insn=158, live_throughout: 7, dead_or_set: 0, 74
insn=164, live_throughout: 0, 7, dead_or_set: 
insn=182, live_throughout: 0, 1, 7, dead_or_set: 
insn=183, live_throughout: 1, 7, dead_or_set: 0, 89
insn=184, live_throughout: 7, 89, dead_or_set: 1, 88
insn=111, live_throughout: 7, 89, dead_or_set: 62, 88
insn=112, live_throughout: 7, 62, dead_or_set: 63, 89
insn=113, live_throughout: 7, 62, 63, dead_or_set: 90
insn=114, live_throughout: 7, 62, 63, dead_or_set: 90
insn=115, live_throughout: 7, 62, 63, dead_or_set: 
insn=116, live_throughout: 7, 62, dead_or_set: 63, 89
insn=117, live_throughout: 7, 89, dead_or_set: 62, 88
insn=197, live_throughout: 7, 88, 89, dead_or_set: 
insn=186, live_throughout: 0, 1, 7, dead_or_set: 
insn=187, live_throughout: 1, 7, dead_or_set: 0, 89
insn=188, live_throughout: 7, 89, dead_or_set: 1, 88
insn=120, live_throughout: 7, 88, 89, dead_or_set: 
insn=122, live_throughout: 7, 89, dead_or_set: 60, 88
insn=123, live_throughout: 7, 60, dead_or_set: 61, 89
insn=124, live_throughout: 7, 60, 61, dead_or_set: 91
insn=125, live_throughout: 7, 60, 61, dead_or_set: 91
insn=126, live_throughout: 7, 60, 61, dead_or_set: 
insn=127, live_throughout: 7, 60, dead_or_set: 61, 89
insn=128, live_throughout: 7, 89, dead_or_set: 60, 88
insn=199, live_throughout: 7, 88, 89, dead_or_set: 
insn=190, live_throughout: 0, 1, 7, dead_or_set: 
insn=191, live_throughout: 1, 7, dead_or_set: 0, 89
insn=192, live_throughout: 7, 89, dead_or_set: 1, 88
insn=138, live_throughout: 7, 88, 89, dead_or_set: 
insn=140, live_throughout: 7, 89, dead_or_set: 58, 88
insn=141, live_throughout: 7, 58, dead_or_set: 59, 89
insn=142, live_throughout: 7, 58, 59, dead_or_set: 93
insn=143, live_throughout: 7, 58, 59, dead_or_set: 93
insn=144, live_throughout: 7, 58, 59, dead_or_set: 
insn=145, live_throughout: 7, 58, dead_or_set: 59, 89
insn=146, live_throughout: 7, 89, dead_or_set: 58, 88
insn=179, live_throughout: 7, dead_or_set: 89
insn=180, live_throughout: 7, dead_or_set: 
changing reg in insn 140
changing reg in insn 146
changing reg in insn 141
changing reg in insn 145
changing reg in insn 122
changing reg in insn 128
changing reg in insn 123
changing reg in insn 127
changing reg in insn 111
changing reg in insn 117
changing reg in insn 112
changing reg in insn 116
changing reg in insn 103
changing reg in insn 154
changing reg in insn 97
changing reg in insn 100
changing reg in insn 92
changing reg in insn 94
changing reg in insn 83
changing reg in insn 86
changing reg in insn 61
changing reg in insn 64
changing reg in insn 49
changing reg in insn 52
changing reg in insn 40
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 29
changing reg in insn 32
changing reg in insn 13
changing reg in insn 16
changing reg in insn 154
changing reg in insn 158
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 69
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 89
changing reg in insn 90
changing reg in insn 104
changing reg in insn 105
changing reg in insn 146
changing reg in insn 192
changing reg in insn 128
changing reg in insn 188
changing reg in insn 117
changing reg in insn 184
changing reg in insn 140
changing reg in insn 122
changing reg in insn 111
changing reg in insn 145
changing reg in insn 191
changing reg in insn 127
changing reg in insn 187
changing reg in insn 116
changing reg in insn 183
changing reg in insn 179
changing reg in insn 141
changing reg in insn 123
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 124
changing reg in insn 125
changing reg in insn 133
changing reg in insn 134
changing reg in insn 142
changing reg in insn 143
changing reg in insn 151
changing reg in insn 152
deleting insn with uid = 13.
deleting insn with uid = 29.
deleting insn with uid = 40.
deleting insn with uid = 42.
deleting insn with uid = 49.
deleting insn with uid = 61.
deleting insn with uid = 83.
deleting insn with uid = 92.
deleting insn with uid = 97.
deleting insn with uid = 158.
deleting insn with uid = 183.
deleting insn with uid = 184.
deleting insn with uid = 187.
deleting insn with uid = 188.
deleting insn with uid = 191.
deleting insn with uid = 192.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 180.


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={51d,32u} r1={32d,3u} r2={26d} r3={4d,4u} r4={3d,3u} r6={1d,24u} r7={1d,109u} r8={25d} r9={25d} r10={25d} r11={25d} r12={25d} r13={25d} r14={25d} r15={25d} r16={3u} r17={44d,1u} r18={25d} r19={25d} r20={1d,4u,18d} r21={25d} r22={25d} r23={25d} r24={25d} r25={25d} r26={25d} r27={25d} r28={25d} r29={25d} r30={25d} r31={25d} r32={25d} r33={25d} r34={25d} r35={25d} r36={25d} r37={25d} r38={25d} r39={25d} r40={25d} r41={25d} r42={25d} r43={25d} r44={25d} r45={25d} r46={25d} r47={25d} r48={25d} r49={25d} r50={25d} r51={25d} r52={25d} 
;;    total ref usage 1414{1213d,183u,18e} in 105{80 regular + 25 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 75 76

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.cpp:4 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb6b6bf60>)) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.cpp:4 (parallel [
            (set (reg:SI 0 ax [75])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 7 6 8 2 class_string.cpp:4 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [75])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(call_insn 8 7 9 2 class_string.cpp:4 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringC1EPKc") [flags 0x1]  <function_decl 0xb6b1c300 __comp_ctor >) [0 S1 A8])
        (const_int 8 [0x8])) 465 {*call_0} (nil)
    (nil))

(insn 9 8 10 2 class_string.cpp:5 (parallel [
            (set (reg:SI 0 ax [76])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 10 9 11 2 class_string.cpp:5 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [76])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(insn 11 10 12 2 class_string.cpp:5 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 12 11 166 2 class_string.cpp:5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZlsRSoR6String") [flags 0x3]  <function_decl 0xb6b0f780 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (nil))
    (nil))
;; End of basic block 2 -> ( 3 23)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  23 (ab,abcall,eh)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 73

;; Pred edge  2 (fallthru)
(note 166 12 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 166 16 3 class_string.cpp:5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 16 15 17 3 class_string.cpp:5 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:73 D.21277 ] [73])) 41 {*movsi_1} (nil))

(call_insn 17 16 18 3 class_string.cpp:5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4 23)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  23 (ab,abcall,eh)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 77 78

;; Pred edge  3 (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 class_string.cpp:6 (parallel [
            (set (reg:SI 0 ax [77])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 20 19 21 4 class_string.cpp:6 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [77])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(insn 21 20 22 4 class_string.cpp:6 (parallel [
            (set (reg:SI 0 ax [78])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 22 21 23 4 class_string.cpp:6 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [78])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(call_insn 23 22 24 4 class_string.cpp:6 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringC1ERKS_") [flags 0x1]  <function_decl 0xb6b1c200 __comp_ctor >) [0 S1 A8])
        (const_int 8 [0x8])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (nil))
    (nil))
;; End of basic block 4 -> ( 5 23)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  5 (fallthru)
;; Succ edge  23 (ab,abcall,eh)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 79

;; Pred edge  4 (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 class_string.cpp:7 (parallel [
            (set (reg:SI 0 ax [79])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 26 25 27 5 class_string.cpp:7 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [79])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(insn 27 26 28 5 class_string.cpp:7 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 28 27 167 5 class_string.cpp:7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZlsRSoR6String") [flags 0x3]  <function_decl 0xb6b0f780 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 5 -> ( 6 21)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 72

;; Pred edge  5 (fallthru)
(note 167 28 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 167 32 6 class_string.cpp:7 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 32 31 33 6 class_string.cpp:7 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:72 D.21278 ] [72])) 41 {*movsi_1} (nil))

(call_insn 33 32 34 6 class_string.cpp:7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 6 -> ( 7 21)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  7 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 70 71 80 81

;; Pred edge  6 (fallthru)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 class_string.cpp:8 (parallel [
            (set (reg:SI 0 ax [80])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 36 35 37 7 class_string.cpp:8 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [80])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(insn 37 36 38 7 class_string.cpp:8 (parallel [
            (set (reg:SI 0 ax [81])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 38 37 39 7 class_string.cpp:8 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [81])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(call_insn 39 38 43 7 class_string.cpp:8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:SI ("_ZN6StringeqERKS_") [flags 0x1]  <function_decl 0xb6b0ff80 operator==>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 43 39 44 7 class_string.cpp:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:71 retval.69 ] [71])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil))

(jump_insn 44 43 45 7 class_string.cpp:8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 7 -> ( 8 11)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  8 (fallthru)
;; Succ edge  11

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []

;; Pred edge  7 (fallthru)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 class_string.cpp:9 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb6b6b8e0>)) 41 {*movsi_1} (nil))

(insn 47 46 48 8 class_string.cpp:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 48 47 168 8 class_string.cpp:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0xb6c49300 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 8 -> ( 9 21)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  9 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 69

;; Pred edge  8 (fallthru)
(note 168 48 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 168 52 9 class_string.cpp:9 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 52 51 53 9 class_string.cpp:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:69 D.21283 ] [69])) 41 {*movsi_1} (nil))

(call_insn 53 52 194 9 class_string.cpp:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 9 -> ( 10 21)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  10 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

;; Pred edge  9 (fallthru)
(note 194 53 195 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 195 194 196 10 class_string.cpp:9 (set (pc)
        (label_ref 66)) 459 {jump} (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  13 [100.0%] 

(barrier 196 195 56)

;; Start of basic block ( 7) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []

;; Pred edge  7
(code_label 56 196 57 11 34 "" [1 uses])

(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 11 class_string.cpp:12 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <string_cst 0xb6b6bde0>)) 41 {*movsi_1} (nil))

(insn 59 58 60 11 class_string.cpp:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 60 59 170 11 class_string.cpp:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0xb6c49300 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 11 -> ( 12 21)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  12 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 68

;; Pred edge  11 (fallthru)
(note 170 60 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 63 170 64 12 class_string.cpp:12 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 64 63 65 12 class_string.cpp:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:68 D.21285 ] [68])) 41 {*movsi_1} (nil))

(call_insn 65 64 66 12 class_string.cpp:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 12 -> ( 13 21)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  13 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 12 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 82

;; Pred edge  12 (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 66 65 67 13 35 "" [1 uses])

(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 13 class_string.cpp:14 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <string_cst 0xb6b745e8>)) 41 {*movsi_1} (nil))

(insn 69 68 70 13 class_string.cpp:14 (parallel [
            (set (reg:SI 0 ax [82])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 70 69 71 13 class_string.cpp:14 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [82])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(call_insn 71 70 72 13 class_string.cpp:14 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringC1EPKc") [flags 0x1]  <function_decl 0xb6b1c300 __comp_ctor >) [0 S1 A8])
        (const_int 8 [0x8])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (nil))
;; End of basic block 13 -> ( 14 21)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  14 (fallthru)
;; Succ edge  21 (ab,abcall,eh)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 83 84

;; Pred edge  13 (fallthru)
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 14 class_string.cpp:15 (parallel [
            (set (reg:SI 0 ax [83])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 74 73 75 14 class_string.cpp:15 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [83])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(insn 75 74 76 14 class_string.cpp:15 (parallel [
            (set (reg:SI 0 ax [84])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 76 75 77 14 class_string.cpp:15 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [84])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(call_insn 77 76 78 14 class_string.cpp:15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:SI ("_ZN6StringaSERKS_") [flags 0x1]  <function_decl 0xb6b0fa00 operator=>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (nil))
;; End of basic block 14 -> ( 15 20)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  15 (fallthru)
;; Succ edge  20 (ab,abcall,eh)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 85

;; Pred edge  14 (fallthru)
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 15 class_string.cpp:16 (parallel [
            (set (reg:SI 0 ax [85])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 80 79 81 15 class_string.cpp:16 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [85])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(insn 81 80 82 15 class_string.cpp:16 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 82 81 171 15 class_string.cpp:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZlsRSoR6String") [flags 0x3]  <function_decl 0xb6b0f780 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (nil))
;; End of basic block 15 -> ( 16 20)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  16 (fallthru)
;; Succ edge  20 (ab,abcall,eh)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 67

;; Pred edge  15 (fallthru)
(note 171 82 85 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 85 171 86 16 class_string.cpp:16 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 86 85 87 16 class_string.cpp:16 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:67 D.21286 ] [67])) 41 {*movsi_1} (nil))

(call_insn 87 86 88 16 class_string.cpp:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (nil))
;; End of basic block 16 -> ( 17 20)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  17 (fallthru)
;; Succ edge  20 (ab,abcall,eh)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 66 86

;; Pred edge  16 (fallthru)
(note 88 87 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 17 class_string.cpp:17 (parallel [
            (set (reg:SI 0 ax [86])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 90 89 91 17 class_string.cpp:17 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [86])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(call_insn 91 90 94 17 class_string.cpp:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:SI ("_ZNK6String4sizeEv") [flags 0x1]  <function_decl 0xb6b0fb00 size>) [0 S1 A8])
            (const_int 4 [0x4]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 94 91 95 17 class_string.cpp:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [orig:66 D.21287 ] [66])) 41 {*movsi_1} (nil))

(insn 95 94 96 17 class_string.cpp:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4cout") [flags 0x40]  <var_decl 0xb6af3630 cout>)) 41 {*movsi_1} (nil))

(call_insn 96 95 172 17 class_string.cpp:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEi") [flags 0x41]  <function_decl 0xb6c1f580 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (nil))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  18 (fallthru)
;; Succ edge  20 (ab,abcall,eh)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 65

;; Pred edge  17 (fallthru)
(note 172 96 99 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 99 172 100 18 class_string.cpp:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xb6c41d00 endl>)) 41 {*movsi_1} (nil))

(insn 100 99 101 18 class_string.cpp:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:65 D.21288 ] [65])) 41 {*movsi_1} (nil))

(call_insn 101 100 102 18 class_string.cpp:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xb6c1fd00 operator<<>) [0 S1 A8])
            (const_int 8 [0x8]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (nil))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  19 (fallthru)
;; Succ edge  20 (ab,abcall,eh)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 64 74 87 92 94

;; Pred edge  18 (fallthru)
(note 102 101 103 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 19 class_string.cpp:18 (set (reg:SI 3 bx [orig:64 D.21289 ] [64])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))

(insn 104 103 105 19 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [87])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 105 104 106 19 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [87])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(call_insn 106 105 133 19 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 133 106 134 19 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [92])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 134 133 135 19 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [92])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(call_insn 135 134 151 19 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 151 135 152 19 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [94])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 152 151 153 19 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [94])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(call_insn 153 152 154 19 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 154 153 164 19 class_string.cpp:18 (set (reg:SI 0 ax [orig:74 <result> ] [74])
        (reg:SI 3 bx [orig:64 D.21289 ] [64])) 41 {*movsi_1} (nil))

(insn 164 154 182 19 class_string.cpp:19 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 19 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 14 15 16 17 18) -> 20
;; bb 20 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 62 63 88 89 90

;; Pred edge  14 (ab,abcall,eh)
;; Pred edge  15 (ab,abcall,eh)
;; Pred edge  16 (ab,abcall,eh)
;; Pred edge  17 (ab,abcall,eh)
;; Pred edge  18 (ab,abcall,eh)
(code_label/s 182 164 185 20 42 "" [1 uses])

(note 185 182 109 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note/s 109 185 111 20 "" NOTE_INSN_DELETED_LABEL 37)

(insn 111 109 112 20 class_string.cpp:18 (set (reg:SI 3 bx [orig:62 save_filt.74 ] [62])
        (reg:SI 1 dx [88])) 41 {*movsi_1} (nil))

(insn 112 111 113 20 class_string.cpp:18 (set (reg/f:SI 4 si [orig:63 save_eptr.73 ] [63])
        (reg:SI 0 ax [89])) 41 {*movsi_1} (nil))

(insn 113 112 114 20 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [90])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 114 113 115 20 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [90])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(call_insn 115 114 116 20 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 116 115 117 20 class_string.cpp:18 (set (reg:SI 0 ax [89])
        (reg/f:SI 4 si [orig:63 save_eptr.73 ] [63])) 41 {*movsi_1} (nil))

(insn 117 116 197 20 class_string.cpp:18 (set (reg:SI 1 dx [88])
        (reg:SI 3 bx [orig:62 save_filt.74 ] [62])) 41 {*movsi_1} (nil))

(jump_insn 197 117 198 20 (set (pc)
        (label_ref 120)) 459 {jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89


;; Succ edge  22 [100.0%] 

(barrier 198 197 186)

;; Start of basic block ( 5 6 8 9 11 12 13) -> 21
;; bb 21 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 88 89

;; Pred edge  5 (ab,abcall,eh)
;; Pred edge  6 (ab,abcall,eh)
;; Pred edge  8 (ab,abcall,eh)
;; Pred edge  9 (ab,abcall,eh)
;; Pred edge  11 (ab,abcall,eh)
;; Pred edge  12 (ab,abcall,eh)
;; Pred edge  13 (ab,abcall,eh)
(code_label/s 186 198 189 21 43 "" [1 uses])

(note 189 186 120 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 21 -> ( 22)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 60 61 88 89 91

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label/s 120 189 121 22 38 "" [2 uses])

(note 121 120 122 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 22 class_string.cpp:18 (set (reg:SI 3 bx [orig:60 save_filt.76 ] [60])
        (reg:SI 1 dx [88])) 41 {*movsi_1} (nil))

(insn 123 122 124 22 class_string.cpp:18 (set (reg/f:SI 4 si [orig:61 save_eptr.75 ] [61])
        (reg:SI 0 ax [89])) 41 {*movsi_1} (nil))

(insn 124 123 125 22 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [91])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 125 124 126 22 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [91])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(call_insn 126 125 127 22 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 127 126 128 22 class_string.cpp:18 (set (reg:SI 0 ax [89])
        (reg/f:SI 4 si [orig:61 save_eptr.75 ] [61])) 41 {*movsi_1} (nil))

(insn 128 127 199 22 class_string.cpp:18 (set (reg:SI 1 dx [88])
        (reg:SI 3 bx [orig:60 save_filt.76 ] [60])) 41 {*movsi_1} (nil))

(jump_insn 199 128 200 22 (set (pc)
        (label_ref 138)) 459 {jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89


;; Succ edge  24 [100.0%] 

(barrier 200 199 190)

;; Start of basic block ( 2 3 4) -> 23
;; bb 23 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 88 89

;; Pred edge  2 (ab,abcall,eh)
;; Pred edge  3 (ab,abcall,eh)
;; Pred edge  4 (ab,abcall,eh)
(code_label/s 190 200 193 23 44 "" [1 uses])

(note 193 190 138 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 23 -> ( 24)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58 59 88 89 93

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label/s 138 193 139 24 40 "" [2 uses])

(note 139 138 140 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 24 class_string.cpp:18 (set (reg:SI 3 bx [orig:58 save_filt.78 ] [58])
        (reg:SI 1 dx [88])) 41 {*movsi_1} (nil))

(insn 141 140 142 24 class_string.cpp:18 (set (reg/f:SI 4 si [orig:59 save_eptr.77 ] [59])
        (reg:SI 0 ax [89])) 41 {*movsi_1} (nil))

(insn 142 141 143 24 class_string.cpp:18 (parallel [
            (set (reg:SI 0 ax [93])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 213 {*addsi_1} (nil))

(insn 143 142 144 24 class_string.cpp:18 (set (mem/f/i:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [93])) 41 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -4 [0xfffffffc]))
        (nil)))

(call_insn 144 143 145 24 class_string.cpp:18 (call (mem:QI (symbol_ref/i:SI ("_ZN6StringD1Ev") [flags 0x1]  <function_decl 0xb6b1c400 __comp_dtor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 145 144 146 24 class_string.cpp:18 (set (reg:SI 0 ax [89])
        (reg/f:SI 4 si [orig:59 save_eptr.77 ] [59])) 41 {*movsi_1} (nil))

(insn 146 145 179 24 class_string.cpp:18 (set (reg:SI 1 dx [88])
        (reg:SI 3 bx [orig:58 save_filt.78 ] [58])) 41 {*movsi_1} (nil))

(insn 179 146 180 24 class_string.cpp:18 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [89])) 41 {*movsi_1} (nil))

(call_insn 180 179 148 24 class_string.cpp:18 (call (mem:QI (symbol_ref:SI ("_Unwind_Resume") [flags 0x41]) [0 S1 A8])
        (const_int 16 [0x10])) 465 {*call_0} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 24 -> ()
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]



(barrier 148 180 201)

(note 201 148 0 NOTE_INSN_DELETED)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    r58: preferred GENERAL_REGS, alternative NO_REGS
    a0 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 17(l0): point = 1
   Insn 16(l0): point = 3
   Insn 15(l0): point = 5
   Insn 14(l0): point = 7
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 6(l0): point = 21
   Insn 5(l0): point = 23
 a0(r58): [4..9]
Compressing live ranges: from 26 to 2 - 7%
Ranges after the compression:
 a0(r58): [0..1]
  regions=1, blocks=6, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1
Disposition:
    0:r58  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 
insn=11, live_throughout: 7, dead_or_set: 
insn=12, live_throughout: 7, dead_or_set: 
insn=13, live_throughout: 7, dead_or_set: 58
insn=14, live_throughout: 7, 58, dead_or_set: 
insn=15, live_throughout: 7, 58, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 58
insn=17, live_throughout: 7, dead_or_set: 0
insn=23, live_throughout: 7, dead_or_set: 
changing reg in insn 13
changing reg in insn 16
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r6={1d,7u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 123{101d,22u,0e} in 11{9 regular + 2 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.cpp:19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) 2 {*cmpsi_1_insn} (nil))

(jump_insn 6 5 7 2 class_string.cpp:19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:SI 23)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3 (fallthru)
;; Succ edge  5

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  2 (fallthru)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 class_string.cpp:19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 12 [0xc])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) 2 {*cmpsi_1_insn} (nil))

(jump_insn 9 8 10 3 class_string.cpp:19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:SI 23)
            (pc))) 440 {*jcc_1} (nil))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 58

;; Pred edge  3 (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0xb6af3898 __ioinit>)) 41 {*movsi_1} (nil))

(call_insn 12 11 13 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0xb6e25c80 __comp_ctor >) [0 S1 A8])
        (const_int 4 [0x4])) 465 {*call_0} (nil)
    (nil))

(insn 13 12 14 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (reg/f:SI 0 ax [orig:58 __comp_dtor .72 ] [58])
        (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xb6e25d80 __comp_dtor >)) 41 {*movsi_1} (nil))

(insn 14 13 15 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (symbol_ref:SI ("__dso_handle") [flags 0x40]  <var_decl 0xb6b3f318 __dso_handle>)) 41 {*movsi_1} (nil))

(insn 15 14 16 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0xb6af3898 __ioinit>)) 41 {*movsi_1} (nil))

(insn 16 15 17 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 __comp_dtor .72 ] [58])) 41 {*movsi_1} (nil))

(call_insn 17 16 23 4 /usr/lib/gcc/i686-redhat-linux/4.4.7/../../../../include/c++/4.4.7/iostream:72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__cxa_atexit") [flags 0x41]  <function_decl 0xb6b1c980 __cxa_atexit>) [0 S1 A8])
            (const_int 12 [0xc]))) 693 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  5 (fallthru)

;; Start of basic block ( 4 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

;; Pred edge  4 (fallthru)
;; Pred edge  2
;; Pred edge  3
(code_label 23 17 26 5 47 "" [2 uses])

(note 26 23 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 26 0 NOTE_INSN_DELETED)


;; Function (static initializers for class_string.cpp) (_GLOBAL__I__ZlsRSoR6String)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.


(static initializers for class_string.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,2u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 60{52d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []

;; Pred edge  ENTRY (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 2 class_string.cpp:19 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 65535 [0xffff])) 41 {*movsi_1} (nil))

(insn 6 5 7 2 class_string.cpp:19 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 1 [0x1])) 41 {*movsi_1} (nil))

(call_insn 7 6 15 2 class_string.cpp:19 (call (mem:QI (symbol_ref:SI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0xb6b1c900 __static_initialization_and_destruction_0>) [0 S1 A8])
        (const_int 8 [0x8])) 465 {*call_0} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 15 7 0 NOTE_INSN_DELETED)

